// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package data

import "strconv"

type OrderOffset int16

const (
	/// -4 平昨
	OrderOffsetCLOSE_HISTORY OrderOffset = -4
	/// -3 平今
	OrderOffsetCLOSE_TODAY   OrderOffset = -3
	/// -2 强平
	OrderOffsetFORCE_CLOSE   OrderOffset = -2
	/// -1 平仓，在不分平今和平昨的交易所中使用
	OrderOffsetCLOSE         OrderOffset = -1
	/// 0 默认，通常在现货交易中使用；与BUY搭配为买开(等价与BUY+OPEN)，与SELL搭配为卖平(等价于SELL+CLOSE)
	OrderOffsetDEFAULT       OrderOffset = 0
	/// 1 开仓
	OrderOffsetOPEN          OrderOffset = 1
)

var EnumNamesOrderOffset = map[OrderOffset]string{
	OrderOffsetCLOSE_HISTORY: "CLOSE_HISTORY",
	OrderOffsetCLOSE_TODAY:   "CLOSE_TODAY",
	OrderOffsetFORCE_CLOSE:   "FORCE_CLOSE",
	OrderOffsetCLOSE:         "CLOSE",
	OrderOffsetDEFAULT:       "DEFAULT",
	OrderOffsetOPEN:          "OPEN",
}

var EnumValuesOrderOffset = map[string]OrderOffset{
	"CLOSE_HISTORY": OrderOffsetCLOSE_HISTORY,
	"CLOSE_TODAY":   OrderOffsetCLOSE_TODAY,
	"FORCE_CLOSE":   OrderOffsetFORCE_CLOSE,
	"CLOSE":         OrderOffsetCLOSE,
	"DEFAULT":       OrderOffsetDEFAULT,
	"OPEN":          OrderOffsetOPEN,
}

func (v OrderOffset) String() string {
	if s, ok := EnumNamesOrderOffset[v]; ok {
		return s
	}
	return "OrderOffset(" + strconv.FormatInt(int64(v), 10) + ")"
}
